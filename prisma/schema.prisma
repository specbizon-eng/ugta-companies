generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CLIENT
  STAFF
  ADMIN
  MOD
}

enum ContractStatus {
  PENDING
  ACTIVE
  EXPIRED
  REJECTED
}

enum VehicleStatus {
  AVAILABLE
  BOOKED
  RENTED
  MAINTENANCE
}

enum ChatPenalty  {
  NONE
  MUTE
  BAN
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  passwordHash  String
  name          String
  role          Role     @default(CLIENT)
  balanceCents  Int      @default(0)
  ipHash        String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  contracts     Contract[]
  bookings      Booking[]

  // ✅ зворотній зв’язок до BalanceLedger
  ledgerEntries BalanceLedger[] @relation("UserToLedger")
}

model MarketCategory {
  id    String @id @default(cuid())
  name  String @unique
  order Int    @default(0)
  items MarketItem[]
}

enum ListingStatus { PENDING APPROVED REJECTED }

model MarketItem {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields:[userId],references:[id])
  categoryId  String
  category    MarketCategory @relation(fields:[categoryId],references:[id])
  title       String
  description String
  priceCents  Int?     // опціонально
  contact     String?  // Discord/Telegram
  photos      Json     // масив URLів
  status      ListingStatus @default(PENDING)
  createdAt   DateTime @default(now())
}

model Contract {
  id          String          @id @default(cuid())
  userId      String
  user        User            @relation(fields: [userId], references: [id])
  title       String
  body        String
  status      ContractStatus  @default(PENDING)
  activeUntil DateTime?
  fileUrl     String?
  reviewerId  String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Vehicle {
  id               String         @id @default(cuid())
  title            String
  description      String
  photoUrl         String?
  docUrl           String?
  status           VehicleStatus  @default(AVAILABLE)
  pricePerDayCents Int            @default(0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt

  bookings         Booking[]
}

model Booking {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  vehicleId  String
  vehicle    Vehicle  @relation(fields: [vehicleId], references: [id])
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
}

model BalanceLedger {
  id         String   @id @default(cuid())
  userId     String

  // ✅ явна назва зв’язку
  user       User     @relation("UserToLedger", fields: [userId], references: [id])

  deltaCents Int
  note       String
  createdAt  DateTime @default(now())
}

model ChatModeration {
  id        String       @id @default(cuid())
  targetId  String?
  ipHash    String?
  penalty   ChatPenalty  @default(NONE)
  reason    String?
  expiresAt DateTime?
  createdAt DateTime     @default(now())
}
